/**

   ~ Patchwork Framework ~

           _,-,-.
        ,-: |.'-:|..-.-..
    _..-:| | `-`. \.--'-'
 -<...--:'-|_|_|;  \
         \   /     /
          :      ,'
          |      |
          |      |
          |      |
          |      |  Je suis Charlie.

*/

// ---------

/**

  Configuration below is encouraged if you wish to tweak the Patchwork framework, and build
  a custom CSS file from your modifications.

*/

// Maximum width of the container.
$max-width: 960px;

// Amount of columns to be rendered.
$column-count: 12;

// Range for the order attributes.
$order-limit: (from: -10, to: 25);

// Breakpoints in pixels for tiny, small, medium and large.
$breakpoints: (none: 0, tiny: 400px, small: 550px, medium: 700px, large: $max-width);

// ---------

/**

  Everything below are the internals of the framework and shouldn't really be touched.

*/

$column-width: ($max-width / $column-count);

.patchwork {
  display: flex;
  max-width: $max-width;
  flex-direction: row;
  flex-flow: row wrap;
}

*[data-patchwork] {
  flex: 1 1 100%;
}

@mixin column-styles($label) {

  *[data-patchwork*="#{$label}-default"] {
      flex: 1 $max-width;
  }

  @if $label == large or $label == medium {

    @for $index from 0 through $column-count {

        *[data-patchwork*="#{$label}-size: #{$index}"] {

            @if $index == 0 {
                flex: $index;
            } @else {
                flex: $index;
                max-width: #{$column-width * $index};
            }

        }

        *[data-patchwork*="#{$label}-size: #{$index}!"] {

            @if $index != 0 {
                flex: $index #{$column-width * $index};
                width: #{$column-width * $index};
            }

        }

    }

  }

  @for $index from map-get($order-limit, from) through map-get($order-limit, to) {

    *[data-patchwork*="#{$label}-order: #{$index}"] {
      order: $index
    }

  }

}

@mixin columns {

  $labels-list: tiny small medium large;
  $previous-label: none;

  @each $label in $labels-list {

    @if $label == large {

      @media all and (min-width: map-get($breakpoints, $previous-label)) {
        @include column-styles($label);
      }

    } @else {

      @media all and (min-width: map-get($breakpoints, $previous-label)) and (max-width: map-get($breakpoints, $label)) {
        @include column-styles($label);
      }

    }

    $previous-label: $label;

  }

}

@include columns;